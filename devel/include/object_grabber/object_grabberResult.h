// Generated by gencpp from file object_grabber/object_grabberResult.msg
// DO NOT EDIT!


#ifndef OBJECT_GRABBER_MESSAGE_OBJECT_GRABBERRESULT_H
#define OBJECT_GRABBER_MESSAGE_OBJECT_GRABBERRESULT_H


#include <string>
#include <vector>
#include <map>

#include <ros/types.h>
#include <ros/serialization.h>
#include <ros/builtin_message_traits.h>
#include <ros/message_operations.h>


namespace object_grabber
{
template <class ContainerAllocator>
struct object_grabberResult_
{
  typedef object_grabberResult_<ContainerAllocator> Type;

  object_grabberResult_()
    : return_code(0)  {
    }
  object_grabberResult_(const ContainerAllocator& _alloc)
    : return_code(0)  {
  (void)_alloc;
    }



   typedef int32_t _return_code_type;
  _return_code_type return_code;


    enum { SUCCESS = 0 };
     enum { OBJECT_ACQUIRED = 0 };
     enum { FAILED_CANNOT_REACH = 1 };
     enum { FAILED_CANNOT_APPROACH = 2 };
     enum { FAILED_CANNOT_REACH_GRASP_POSE = 3 };
     enum { FAILED_CANNOT_REACH_DEPART_POSE = 4 };
     enum { FAILED_OBJECT_NOT_IN_GRIPPER = 5 };
     enum { FAILED_OBJECT_UNKNOWN = 6 };
 

  typedef boost::shared_ptr< ::object_grabber::object_grabberResult_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::object_grabber::object_grabberResult_<ContainerAllocator> const> ConstPtr;

}; // struct object_grabberResult_

typedef ::object_grabber::object_grabberResult_<std::allocator<void> > object_grabberResult;

typedef boost::shared_ptr< ::object_grabber::object_grabberResult > object_grabberResultPtr;
typedef boost::shared_ptr< ::object_grabber::object_grabberResult const> object_grabberResultConstPtr;

// constants requiring out of line definition

   

   

   

   

   

   

   

   



template<typename ContainerAllocator>
std::ostream& operator<<(std::ostream& s, const ::object_grabber::object_grabberResult_<ContainerAllocator> & v)
{
ros::message_operations::Printer< ::object_grabber::object_grabberResult_<ContainerAllocator> >::stream(s, "", v);
return s;
}

} // namespace object_grabber

namespace ros
{
namespace message_traits
{



// BOOLTRAITS {'IsFixedSize': True, 'IsMessage': True, 'HasHeader': False}
// {'roscpp': ['/opt/ros/indigo/share/roscpp/cmake/../msg'], 'actionlib_msgs': ['/opt/ros/indigo/share/actionlib_msgs/cmake/../msg'], 'sensor_msgs': ['/opt/ros/indigo/share/sensor_msgs/cmake/../msg'], 'actionlib': ['/opt/ros/indigo/share/actionlib/cmake/../msg'], 'trajectory_msgs': ['/opt/ros/indigo/share/trajectory_msgs/cmake/../msg'], 'std_msgs': ['/opt/ros/indigo/share/std_msgs/cmake/../msg'], 'baxter_core_msgs': ['/opt/ros/indigo/share/baxter_core_msgs/cmake/../msg'], 'object_grabber': ['/home/lrp39/ros_ws/devel/share/object_grabber/msg'], 'geometry_msgs': ['/opt/ros/indigo/share/geometry_msgs/cmake/../msg'], 'tf': ['/opt/ros/indigo/share/tf/cmake/../msg'], 'cartesian_planner': ['/home/lrp39/ros_ws/devel/share/cartesian_planner/msg'], 'baxter_trajectory_streamer': ['/home/lrp39/ros_ws/devel/share/baxter_trajectory_streamer/msg']}

// !!!!!!!!!!! ['__class__', '__delattr__', '__dict__', '__doc__', '__eq__', '__format__', '__getattribute__', '__hash__', '__init__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_parsed_fields', 'constants', 'fields', 'full_name', 'has_header', 'header_present', 'names', 'package', 'parsed_fields', 'short_name', 'text', 'types']




template <class ContainerAllocator>
struct IsFixedSize< ::object_grabber::object_grabberResult_<ContainerAllocator> >
  : TrueType
  { };

template <class ContainerAllocator>
struct IsFixedSize< ::object_grabber::object_grabberResult_<ContainerAllocator> const>
  : TrueType
  { };

template <class ContainerAllocator>
struct IsMessage< ::object_grabber::object_grabberResult_<ContainerAllocator> >
  : TrueType
  { };

template <class ContainerAllocator>
struct IsMessage< ::object_grabber::object_grabberResult_<ContainerAllocator> const>
  : TrueType
  { };

template <class ContainerAllocator>
struct HasHeader< ::object_grabber::object_grabberResult_<ContainerAllocator> >
  : FalseType
  { };

template <class ContainerAllocator>
struct HasHeader< ::object_grabber::object_grabberResult_<ContainerAllocator> const>
  : FalseType
  { };


template<class ContainerAllocator>
struct MD5Sum< ::object_grabber::object_grabberResult_<ContainerAllocator> >
{
  static const char* value()
  {
    return "36cb571a7713b5757f4b2b6712f127ac";
  }

  static const char* value(const ::object_grabber::object_grabberResult_<ContainerAllocator>&) { return value(); }
  static const uint64_t static_value1 = 0x36cb571a7713b575ULL;
  static const uint64_t static_value2 = 0x7f4b2b6712f127acULL;
};

template<class ContainerAllocator>
struct DataType< ::object_grabber::object_grabberResult_<ContainerAllocator> >
{
  static const char* value()
  {
    return "object_grabber/object_grabberResult";
  }

  static const char* value(const ::object_grabber::object_grabberResult_<ContainerAllocator>&) { return value(); }
};

template<class ContainerAllocator>
struct Definition< ::object_grabber::object_grabberResult_<ContainerAllocator> >
{
  static const char* value()
  {
    return "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======\n\
#result definition\n\
#  response codes...\n\
int32 SUCCESS=0\n\
int32 OBJECT_ACQUIRED=0\n\
int32 FAILED_CANNOT_REACH=1\n\
int32 FAILED_CANNOT_APPROACH=2\n\
int32 FAILED_CANNOT_REACH_GRASP_POSE=3\n\
int32 FAILED_CANNOT_REACH_DEPART_POSE=4\n\
int32 FAILED_OBJECT_NOT_IN_GRIPPER=5\n\
int32 FAILED_OBJECT_UNKNOWN=6\n\
int32 return_code\n\
";
  }

  static const char* value(const ::object_grabber::object_grabberResult_<ContainerAllocator>&) { return value(); }
};

} // namespace message_traits
} // namespace ros

namespace ros
{
namespace serialization
{

  template<class ContainerAllocator> struct Serializer< ::object_grabber::object_grabberResult_<ContainerAllocator> >
  {
    template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
    {
      stream.next(m.return_code);
    }

    ROS_DECLARE_ALLINONE_SERIALIZER
  }; // struct object_grabberResult_

} // namespace serialization
} // namespace ros

namespace ros
{
namespace message_operations
{

template<class ContainerAllocator>
struct Printer< ::object_grabber::object_grabberResult_<ContainerAllocator> >
{
  template<typename Stream> static void stream(Stream& s, const std::string& indent, const ::object_grabber::object_grabberResult_<ContainerAllocator>& v)
  {
    s << indent << "return_code: ";
    Printer<int32_t>::stream(s, indent + "  ", v.return_code);
  }
};

} // namespace message_operations
} // namespace ros

#endif // OBJECT_GRABBER_MESSAGE_OBJECT_GRABBERRESULT_H
