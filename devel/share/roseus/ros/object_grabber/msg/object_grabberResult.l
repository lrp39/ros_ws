;; Auto-generated. Do not edit!


(when (boundp 'object_grabber::object_grabberResult)
  (if (not (find-package "OBJECT_GRABBER"))
    (make-package "OBJECT_GRABBER"))
  (shadow 'object_grabberResult (find-package "OBJECT_GRABBER")))
(unless (find-package "OBJECT_GRABBER::OBJECT_GRABBERRESULT")
  (make-package "OBJECT_GRABBER::OBJECT_GRABBERRESULT"))

(in-package "ROS")
;;//! \htmlinclude object_grabberResult.msg.html


(intern "*SUCCESS*" (find-package "OBJECT_GRABBER::OBJECT_GRABBERRESULT"))
(shadow '*SUCCESS* (find-package "OBJECT_GRABBER::OBJECT_GRABBERRESULT"))
(defconstant object_grabber::object_grabberResult::*SUCCESS* 0)
(intern "*OBJECT_ACQUIRED*" (find-package "OBJECT_GRABBER::OBJECT_GRABBERRESULT"))
(shadow '*OBJECT_ACQUIRED* (find-package "OBJECT_GRABBER::OBJECT_GRABBERRESULT"))
(defconstant object_grabber::object_grabberResult::*OBJECT_ACQUIRED* 0)
(intern "*FAILED_CANNOT_REACH*" (find-package "OBJECT_GRABBER::OBJECT_GRABBERRESULT"))
(shadow '*FAILED_CANNOT_REACH* (find-package "OBJECT_GRABBER::OBJECT_GRABBERRESULT"))
(defconstant object_grabber::object_grabberResult::*FAILED_CANNOT_REACH* 1)
(intern "*FAILED_CANNOT_APPROACH*" (find-package "OBJECT_GRABBER::OBJECT_GRABBERRESULT"))
(shadow '*FAILED_CANNOT_APPROACH* (find-package "OBJECT_GRABBER::OBJECT_GRABBERRESULT"))
(defconstant object_grabber::object_grabberResult::*FAILED_CANNOT_APPROACH* 2)
(intern "*FAILED_CANNOT_REACH_GRASP_POSE*" (find-package "OBJECT_GRABBER::OBJECT_GRABBERRESULT"))
(shadow '*FAILED_CANNOT_REACH_GRASP_POSE* (find-package "OBJECT_GRABBER::OBJECT_GRABBERRESULT"))
(defconstant object_grabber::object_grabberResult::*FAILED_CANNOT_REACH_GRASP_POSE* 3)
(intern "*FAILED_CANNOT_REACH_DEPART_POSE*" (find-package "OBJECT_GRABBER::OBJECT_GRABBERRESULT"))
(shadow '*FAILED_CANNOT_REACH_DEPART_POSE* (find-package "OBJECT_GRABBER::OBJECT_GRABBERRESULT"))
(defconstant object_grabber::object_grabberResult::*FAILED_CANNOT_REACH_DEPART_POSE* 4)
(intern "*FAILED_OBJECT_NOT_IN_GRIPPER*" (find-package "OBJECT_GRABBER::OBJECT_GRABBERRESULT"))
(shadow '*FAILED_OBJECT_NOT_IN_GRIPPER* (find-package "OBJECT_GRABBER::OBJECT_GRABBERRESULT"))
(defconstant object_grabber::object_grabberResult::*FAILED_OBJECT_NOT_IN_GRIPPER* 5)
(intern "*FAILED_OBJECT_UNKNOWN*" (find-package "OBJECT_GRABBER::OBJECT_GRABBERRESULT"))
(shadow '*FAILED_OBJECT_UNKNOWN* (find-package "OBJECT_GRABBER::OBJECT_GRABBERRESULT"))
(defconstant object_grabber::object_grabberResult::*FAILED_OBJECT_UNKNOWN* 6)
(defclass object_grabber::object_grabberResult
  :super ros::object
  :slots (_return_code ))

(defmethod object_grabber::object_grabberResult
  (:init
   (&key
    ((:return_code __return_code) 0)
    )
   (send-super :init)
   (setq _return_code (round __return_code))
   self)
  (:return_code
   (&optional __return_code)
   (if __return_code (setq _return_code __return_code)) _return_code)
  (:serialization-length
   ()
   (+
    ;; int32 _return_code
    4
    ))
  (:serialize
   (&optional strm)
   (let ((s (if strm strm
              (make-string-output-stream (send self :serialization-length)))))
     ;; int32 _return_code
       (write-long _return_code s)
     ;;
     (if (null strm) (get-output-stream-string s))))
  (:deserialize
   (buf &optional (ptr- 0))
   ;; int32 _return_code
     (setq _return_code (sys::peek buf ptr- :integer)) (incf ptr- 4)
   ;;
   self)
  )

(setf (get object_grabber::object_grabberResult :md5sum-) "36cb571a7713b5757f4b2b6712f127ac")
(setf (get object_grabber::object_grabberResult :datatype-) "object_grabber/object_grabberResult")
(setf (get object_grabber::object_grabberResult :definition-)
      "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
#result definition
#  response codes...
int32 SUCCESS=0
int32 OBJECT_ACQUIRED=0
int32 FAILED_CANNOT_REACH=1
int32 FAILED_CANNOT_APPROACH=2
int32 FAILED_CANNOT_REACH_GRASP_POSE=3
int32 FAILED_CANNOT_REACH_DEPART_POSE=4
int32 FAILED_OBJECT_NOT_IN_GRIPPER=5
int32 FAILED_OBJECT_UNKNOWN=6
int32 return_code

")



(provide :object_grabber/object_grabberResult "36cb571a7713b5757f4b2b6712f127ac")


