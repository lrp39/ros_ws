;; Auto-generated. Do not edit!


(when (boundp 'velocity_action_server::velocityGoal)
  (if (not (find-package "VELOCITY_ACTION_SERVER"))
    (make-package "VELOCITY_ACTION_SERVER"))
  (shadow 'velocityGoal (find-package "VELOCITY_ACTION_SERVER")))
(unless (find-package "VELOCITY_ACTION_SERVER::VELOCITYGOAL")
  (make-package "VELOCITY_ACTION_SERVER::VELOCITYGOAL"))

(in-package "ROS")
;;//! \htmlinclude velocityGoal.msg.html
(if (not (find-package "STD_MSGS"))
  (ros::roseus-add-msgs "std_msgs"))


(defclass velocity_action_server::velocityGoal
  :super ros::object
  :slots (_amplitude _frequency _num_cycles ))

(defmethod velocity_action_server::velocityGoal
  (:init
   (&key
    ((:amplitude __amplitude) (instance std_msgs::Float64 :init))
    ((:frequency __frequency) (instance std_msgs::Float64 :init))
    ((:num_cycles __num_cycles) 0)
    )
   (send-super :init)
   (setq _amplitude __amplitude)
   (setq _frequency __frequency)
   (setq _num_cycles (round __num_cycles))
   self)
  (:amplitude
   (&rest __amplitude)
   (if (keywordp (car __amplitude))
       (send* _amplitude __amplitude)
     (progn
       (if __amplitude (setq _amplitude (car __amplitude)))
       _amplitude)))
  (:frequency
   (&rest __frequency)
   (if (keywordp (car __frequency))
       (send* _frequency __frequency)
     (progn
       (if __frequency (setq _frequency (car __frequency)))
       _frequency)))
  (:num_cycles
   (&optional __num_cycles)
   (if __num_cycles (setq _num_cycles __num_cycles)) _num_cycles)
  (:serialization-length
   ()
   (+
    ;; std_msgs/Float64 _amplitude
    (send _amplitude :serialization-length)
    ;; std_msgs/Float64 _frequency
    (send _frequency :serialization-length)
    ;; int32 _num_cycles
    4
    ))
  (:serialize
   (&optional strm)
   (let ((s (if strm strm
              (make-string-output-stream (send self :serialization-length)))))
     ;; std_msgs/Float64 _amplitude
       (send _amplitude :serialize s)
     ;; std_msgs/Float64 _frequency
       (send _frequency :serialize s)
     ;; int32 _num_cycles
       (write-long _num_cycles s)
     ;;
     (if (null strm) (get-output-stream-string s))))
  (:deserialize
   (buf &optional (ptr- 0))
   ;; std_msgs/Float64 _amplitude
     (send _amplitude :deserialize buf ptr-) (incf ptr- (send _amplitude :serialization-length))
   ;; std_msgs/Float64 _frequency
     (send _frequency :deserialize buf ptr-) (incf ptr- (send _frequency :serialization-length))
   ;; int32 _num_cycles
     (setq _num_cycles (sys::peek buf ptr- :integer)) (incf ptr- 4)
   ;;
   self)
  )

(setf (get velocity_action_server::velocityGoal :md5sum-) "ed3e6b67ccca98ffc8c908d8bd51a6cd")
(setf (get velocity_action_server::velocityGoal :datatype-) "velocity_action_server/velocityGoal")
(setf (get velocity_action_server::velocityGoal :definition-)
      "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
std_msgs/Float64 amplitude
std_msgs/Float64 frequency
int32 num_cycles

================================================================================
MSG: std_msgs/Float64
float64 data
")



(provide :velocity_action_server/velocityGoal "ed3e6b67ccca98ffc8c908d8bd51a6cd")


